name: CI

on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - v*


jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - uses: pre-commit/action@v3.0.0

  test:
    strategy:
      matrix:
        runner: [ubuntu-latest, macos-latest, windows-latest]
        # Test oldest supported and latest
        python-version: ["3.8", "3.x"]
    name: test-${{ matrix.runner }}-Python-${{ matrix.python-version }}
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install tools
        run: |
          python -m pip install --user --upgrade pip setuptools
      - name: Run unit tests
        run: |
          python -m pip install --user ".[testing]"
          mkdir tmp
          cd tmp
          python -m pytest ../tests

  publish:
    needs:
      - lint
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Install tools
        run: |
          python -m pip install --user --upgrade pip setuptools build
      - name: Build sdist and wheel
        run: |
          python -m build --sdist --wheel --outdir dist .
      - name: Publish on Test PyPI
        if: >-
          github.event_name == 'push' &&
              (startsWith(github.ref, 'refs/tags/v') ||
               github.ref == 'refs/heads/main')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true
      - name: Publish on PyPI
        if: >-
          github.event_name == 'push' &&
          startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
